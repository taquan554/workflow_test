name: learn-github-actions
on: [push]
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: set-matrix
        id: set-matrix
        run: |
          num=$(echo '["1","2","3"]' | jq -c)
          odd=$(echo '["1","3"]' | jq -c)
          even=$(echo '["2"]' | jq -c)
          aa=$(echo '["A"]' | jq -c)
          bc=$(echo '["B","C"]' | jq -c)
          echo "num=${num}" >> $GITHUB_OUTPUT
          echo "odd=${odd}" >> $GITHUB_OUTPUT
          echo "even=${even}" >> $GITHUB_OUTPUT
          echo "aa=${aa}" >> $GITHUB_OUTPUT
          echo "bc=${bc}" >> $GITHUB_OUTPUT
    outputs:
      num: ${{ steps.set-matrix.outputs.num }}
      odd: ${{ steps.set-matrix.outputs.odd }}
      even: ${{ steps.set-matrix.outputs.even }}
      aa: ${{ steps.set-matrix.outputs.aa }}
      bc: ${{ steps.set-matrix.outputs.bc }}

  build:
    runs-on: ubuntu-latest
    needs: set-matrix
    strategy:
      fail-fast: false
      matrix:
        num: ${{ fromJson(needs.set-matrix.outputs.num) }}
    steps:
      - run: sleep 10
      - run: echo ${{ matrix.num }}

  static:
    runs-on: ubuntu-latest
    needs: [set-matrix, build]
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        num: ${{ fromJson(needs.set-matrix.outputs.num) }}
    steps:
      - run: sleep 10
      - run: echo ${{ matrix.num }}

  test_A1:
    runs-on: ubuntu-latest
    needs: [set-matrix, static]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        odd: ${{ fromJson(needs.set-matrix.outputs.odd) }}
    steps:
      - run: sleep 10
      - run: echo ${{ matrix.odd }}

  test_A2:
    runs-on: ubuntu-latest
    needs: [set-matrix, static]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        even: ${{ fromJson(needs.set-matrix.outputs.even) }}
    steps:
      - run: sleep 10
      - run: echo ${{ matrix.even }}
      
  test_B1:
    runs-on: ubuntu-latest
    needs: [set-matrix, test_A1, test_A2]
    strategy:
      fail-fast: false
      matrix:
        aa: ${{ fromJson(needs.set-matrix.outputs.aa) }}
    steps:
      - run: sleep 10
      - run: echo ${{ matrix.aa }}

  test_B2:
    runs-on: ubuntu-latest
    needs: [set-matrix, test_A1, test_A2]
    strategy:
      fail-fast: false
      matrix:
        bc: ${{ fromJson(needs.set-matrix.outputs.bc) }}
    steps:
      - run: sleep 10
      - run: echo ${{ matrix.bc }}
