name: learn-github-actions
on: [push]
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: set-matrix
        id: set-matrix
        run: |
          num=$(echo '["1","2","3"]' | jq '.c | fromjson')
          odd=$(echo '["1","3"]' | jq '.c | fromjson')
          even=$(echo '[""]' | jq '.c | fromjson')
          vowel=$(echo '["A"]' | jq '.c | fromjson')
          consonant=$(echo '[""]' | jq '.c | fromjson')
          echo "num=${num}" >> $GITHUB_OUTPUT
          echo "odd=${odd}" >> $GITHUB_OUTPUT
          echo "even=${even}" >> $GITHUB_OUTPUT
          echo "vowel=${vowel}" >> $GITHUB_OUTPUT
          echo "consonant=${consonant}" >> $GITHUB_OUTPUT
    outputs:
      num: ${{ steps.set-matrix.outputs.num }}
      odd: ${{ steps.set-matrix.outputs.odd }}
      even: ${{ steps.set-matrix.outputs.even }}
      vowel: ${{ steps.set-matrix.outputs.vowel }}
      consonant: ${{ steps.set-matrix.outputs.consonant }}

  build:
    runs-on: ubuntu-latest
    needs: set-matrix
    strategy:
      fail-fast: false
      matrix:
        num: ${{ needs.set-matrix.outputs.num }}
    steps:
      - name: wait
        run: |
          sleep 10
          echo "timeout"
      - name: main proc
        run: echo ${{ matrix.num }}

  static:
    runs-on: ubuntu-latest
    needs: [set-matrix, build]
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        num: ${{ needs.set-matrix.outputs.num }}
    steps:
      - name: wait
        run: |
          sleep 10
          echo "timeout"
      - name: main proc
        run: echo ${{ matrix.num }}

  test_odd:
    runs-on: ubuntu-latest
    needs: [set-matrix, static]
    if: |
      !contains(needs.set-matrix.outputs.odd, '')
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        odd: ${{ needs.set-matrix.outputs.odd }}
    steps:
      - name: wait
        run: |
          sleep 10
          echo "timeout"
      - name: main proc
        run: echo ${{ matrix.odd }}

  test_even:
    runs-on: ubuntu-latest
    needs: [set-matrix, static]
    if: |
      !contains(needs.set-matrix.outputs.even, '')
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        even: ${{ needs.set-matrix.outputs.even }}
    steps:
      - name: wait
        run: |
          sleep 10
          echo "timeout"
      - name: main proc
        run: echo ${{ matrix.even }}
      
  test_vowel:
    runs-on: ubuntu-latest
    needs: [set-matrix, test_odd, test_even]
    if: |
      !contains(needs.set-matrix.outputs.vowel, '')
    strategy:
      fail-fast: false
      matrix:
        vowel: ${{ needs.set-matrix.outputs.vowel }}
    steps:
      - name: wait
        run: |
          sleep 10
          echo "timeout"
      - name: main proc
        run: echo ${{ matrix.vowel }}

  test_consonant:
    runs-on: ubuntu-latest
    needs: [set-matrix, test_odd, test_even]
    if: |
      !contains(needs.set-matrix.outputs.consonant, '')
    strategy:
      fail-fast: false
      matrix:
        consonant: ${{ needs.set-matrix.outputs.consonant }}
    steps:
      - name: wait
        run: |
          sleep 10
          echo "timeout"
      - name: main proc
        run: echo ${{ matrix.consonant }}
